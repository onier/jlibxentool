package org.xen.stat;
import com.sun.jna.Pointer;
import com.sun.jna.Structure;
import java.util.Arrays;
import java.util.List;
/**
 * <i>native declaration : line 75</i><br>
 * This file was autogenerated by <a href="http://jnaerator.googlecode.com/">JNAerator</a>,<br>
 * a tool written by <a href="http://ochafik.com/">Olivier Chafik</a> that <a href="http://code.google.com/p/jnaerator/wiki/CreditsAndLicense">uses a few opensource projects.</a>.<br>
 * For help, please visit <a href="http://nativelibs4java.googlecode.com/">NativeLibs4Java</a> , <a href="http://rococoa.dev.java.net/">Rococoa</a>, or <a href="http://jna.dev.java.net/">JNA</a>.
 */
public class xenstat_domain extends Structure {
	public int id;
	/** C type : char* */
	public Pointer name;
	public int state;
	public long cpu_ns;
	/** No. vcpus configured for domain */
	public int num_vcpus;
	/**
	 * Array of length num_vcpus<br>
	 * C type : xenstat_vcpu*
	 */
	public org.xen.stat.xenstat_vcpu.ByReference vcpus;
	/** Current memory reservation */
	public long cur_mem;
	/** Total memory allowed */
	public long max_mem;
	public int ssid;
	public int num_networks;
	/**
	 * Array of length num_networks<br>
	 * C type : xenstat_network*
	 */
	public org.xen.stat.xenstat_network.ByReference networks;
	public int num_vbds;
	/** C type : xenstat_vbd* */
	public org.xen.stat.xenstat_vbd.ByReference vbds;
	/** C type : xenstat_tmem */
	public xenstat_tmem tmem_stats;
	public xenstat_domain() {
		super();
	}
	protected List<? > getFieldOrder() {
		return Arrays.asList("id", "name", "state", "cpu_ns", "num_vcpus", "vcpus", "cur_mem", "max_mem", "ssid", "num_networks", "networks", "num_vbds", "vbds", "tmem_stats");
	}
	public xenstat_domain(Pointer peer) {
		super(peer);
	}
	public static class ByReference extends xenstat_domain implements Structure.ByReference {
		
	};
	public static class ByValue extends xenstat_domain implements Structure.ByValue {
		
	};
}

