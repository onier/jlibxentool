package org.xen.jna.xenstat;

import com.sun.jna.Library;
import com.sun.jna.Native;
import com.sun.jna.NativeLibrary;
import com.sun.jna.NativeLong;
import com.sun.jna.Pointer;
import com.sun.jna.PointerType;
import com.sun.jna.ptr.PointerByReference;

/**
 * JNA Wrapper for library <b>org.xen.jna.xenstat</b><br>
 * This file was autogenerated by
 * <a href="http://jnaerator.googlecode.com/">JNAerator</a>,<br>
 * a tool written by <a href="http://ochafik.com/">Olivier Chafik</a> that
 * <a href="http://code.google.com/p/jnaerator/wiki/CreditsAndLicense">uses a
 * few opensource projects.</a>.<br>
 * For help, please visit
 * <a href="http://nativelibs4java.googlecode.com/">NativeLibs4Java</a> ,
 * <a href="http://rococoa.dev.java.net/">Rococoa</a>, or
 * <a href="http://jna.dev.java.net/">JNA</a>.
 */
public interface OrgXenJnaXenstatLibrary extends Library {

    public static final String JNA_LIBRARY_NAME = "xenstat";
    public static final NativeLibrary JNA_NATIVE_LIB = NativeLibrary.getInstance(OrgXenJnaXenstatLibrary.JNA_LIBRARY_NAME);
    public static final OrgXenJnaXenstatLibrary INSTANCE = (OrgXenJnaXenstatLibrary) Native.loadLibrary(OrgXenJnaXenstatLibrary.JNA_LIBRARY_NAME, OrgXenJnaXenstatLibrary.class);
    public static final int XENSTAT_VCPU = (int) 0x1;
    public static final int XENSTAT_ALL = (int) (0x1 | 0x2 | 0x4 | 0x8);
    public static final int XENSTAT_VBD = (int) 0x8;
    public static final int XENSTAT_XEN_VERSION = (int) 0x4;
    public static final int XENSTAT_NETWORK = (int) 0x2;

    /**
     * Initialize the xenstat library. Returns a handle to be used with<br>
     * subsequent calls to the xenstat library, or NULL if an error occurs.<br>
     * Original signature : <code>xenstat_handle* xenstat_init()</code><br>
     * <i>native declaration : line 35</i>
     */
    PointerByReference xenstat_init();

    /**
     * Release the handle to libxc, free resources, etc.<br>
     * Original signature :
     * <code>void xenstat_uninit(xenstat_handle*)</code><br>
     * <i>native declaration : line 38</i><br>
     *
     * @deprecated use the safer method
     * {@link #xenstat_uninit(com.sun.jna.ptr.PointerByReference)} instead
     */
    @Deprecated
    void xenstat_uninit(Pointer handle);

    /**
     * Release the handle to libxc, free resources, etc.<br>
     * Original signature :
     * <code>void xenstat_uninit(xenstat_handle*)</code><br>
     * <i>native declaration : line 38</i>
     */
    void xenstat_uninit(PointerByReference handle);

    /**
     * Get all available information about a node<br>
     * Original signature :
     * <code>xenstat_node* xenstat_get_node(xenstat_handle*, unsigned int)</code><br>
     * <i>native declaration : line 48</i><br>
     *
     * @deprecated use the safer method
     * {@link #xenstat_get_node(com.sun.jna.ptr.PointerByReference, int)}
     * instead
     */
    @Deprecated
    PointerByReference xenstat_get_node(Pointer handle, int flags);

    /**
     * Get all available information about a node<br>
     * Original signature :
     * <code>xenstat_node* xenstat_get_node(xenstat_handle*, unsigned int)</code><br>
     * <i>native declaration : line 48</i>
     */
    PointerByReference xenstat_get_node(PointerByReference handle, int flags);

    /**
     * Free the information<br>
     * Original signature :
     * <code>void xenstat_free_node(xenstat_node*)</code><br>
     * <i>native declaration : line 51</i><br>
     *
     * @deprecated use the safer method
     * {@link #xenstat_free_node(com.sun.jna.ptr.PointerByReference)} instead
     */
    @Deprecated
    void xenstat_free_node(Pointer node);

    /**
     * Free the information<br>
     * Original signature :
     * <code>void xenstat_free_node(xenstat_node*)</code><br>
     * <i>native declaration : line 51</i>
     */
    void xenstat_free_node(PointerByReference node);

    /**
     * Get information about the domain with the given domain ID<br>
     * Original signature :
     * <code>xenstat_domain* xenstat_node_domain(xenstat_node*, unsigned int)</code><br>
     * <i>native declaration : line 58</i><br>
     *
     * @deprecated use the safer method
     * {@link #xenstat_node_domain(com.sun.jna.ptr.PointerByReference, int)}
     * instead
     */
    @Deprecated
    PointerByReference xenstat_node_domain(Pointer node, int domid);

    /**
     * Get information about the domain with the given domain ID<br>
     * Original signature :
     * <code>xenstat_domain* xenstat_node_domain(xenstat_node*, unsigned int)</code><br>
     * <i>native declaration : line 58</i>
     */
    PointerByReference xenstat_node_domain(PointerByReference node, int domid);

    /**
     * Get the domain with the given index; used to loop over all domains.<br>
     * Original signature :
     * <code>xenstat_domain* xenstat_node_domain_by_index(xenstat_node*, unsigned)</code><br>
     * <i>native declaration : line 62</i><br>
     *
     * @deprecated use the safer method
     * {@link #xenstat_node_domain_by_index(com.sun.jna.ptr.PointerByReference, int)}
     * instead
     */
    @Deprecated
    PointerByReference xenstat_node_domain_by_index(Pointer node, int index);

    /**
     * Get the domain with the given index; used to loop over all domains.<br>
     * Original signature :
     * <code>xenstat_domain* xenstat_node_domain_by_index(xenstat_node*, unsigned)</code><br>
     * <i>native declaration : line 62</i>
     */
    PointerByReference xenstat_node_domain_by_index(PointerByReference node, int index);

    /**
     * Get xen version of the node<br>
     * Original signature :
     * <code>char* xenstat_node_xen_version(xenstat_node*)</code><br>
     * <i>native declaration : line 66</i><br>
     *
     * @deprecated use the safer method
     * {@link #xenstat_node_xen_version(com.sun.jna.ptr.PointerByReference)}
     * instead
     */
    @Deprecated
    Pointer xenstat_node_xen_version(Pointer node);

    /**
     * Get xen version of the node<br>
     * Original signature :
     * <code>char* xenstat_node_xen_version(xenstat_node*)</code><br>
     * <i>native declaration : line 66</i>
     */
    Pointer xenstat_node_xen_version(PointerByReference node);

    /**
     * Get amount of total memory on a node<br>
     * Original signature :
     * <code>long long xenstat_node_tot_mem(xenstat_node*)</code><br>
     * <i>native declaration : line 69</i><br>
     *
     * @deprecated use the safer method
     * {@link #xenstat_node_tot_mem(com.sun.jna.ptr.PointerByReference)} instead
     */
    @Deprecated
    long xenstat_node_tot_mem(Pointer node);

    /**
     * Get amount of total memory on a node<br>
     * Original signature :
     * <code>long long xenstat_node_tot_mem(xenstat_node*)</code><br>
     * <i>native declaration : line 69</i>
     */
    long xenstat_node_tot_mem(PointerByReference node);

    /**
     * Get amount of free memory on a node<br>
     * Original signature :
     * <code>long long xenstat_node_free_mem(xenstat_node*)</code><br>
     * <i>native declaration : line 72</i><br>
     *
     * @deprecated use the safer method
     * {@link #xenstat_node_free_mem(com.sun.jna.ptr.PointerByReference)}
     * instead
     */
    @Deprecated
    long xenstat_node_free_mem(Pointer node);

    /**
     * Get amount of free memory on a node<br>
     * Original signature :
     * <code>long long xenstat_node_free_mem(xenstat_node*)</code><br>
     * <i>native declaration : line 72</i>
     */
    long xenstat_node_free_mem(PointerByReference node);

    /**
     * Get amount of tmem freeable memory (in MiB) on a node<br>
     * Original signature :
     * <code>long xenstat_node_freeable_mb(xenstat_node*)</code><br>
     * <i>native declaration : line 75</i><br>
     *
     * @deprecated use the safer method
     * {@link #xenstat_node_freeable_mb(com.sun.jna.ptr.PointerByReference)}
     * instead
     */
    @Deprecated
    NativeLong xenstat_node_freeable_mb(Pointer node);

    /**
     * Get amount of tmem freeable memory (in MiB) on a node<br>
     * Original signature :
     * <code>long xenstat_node_freeable_mb(xenstat_node*)</code><br>
     * <i>native declaration : line 75</i>
     */
    NativeLong xenstat_node_freeable_mb(PointerByReference node);

    /**
     * Find the number of domains existing on a node<br>
     * Original signature :
     * <code>int xenstat_node_num_domains(xenstat_node*)</code><br>
     * <i>native declaration : line 78</i><br>
     *
     * @deprecated use the safer method
     * {@link #xenstat_node_num_domains(com.sun.jna.ptr.PointerByReference)}
     * instead
     */
    @Deprecated
    int xenstat_node_num_domains(Pointer node);

    /**
     * Find the number of domains existing on a node<br>
     * Original signature :
     * <code>int xenstat_node_num_domains(xenstat_node*)</code><br>
     * <i>native declaration : line 78</i>
     */
    int xenstat_node_num_domains(PointerByReference node);

    /**
     * Find the number of CPUs existing on a node<br>
     * Original signature :
     * <code>int xenstat_node_num_cpus(xenstat_node*)</code><br>
     * <i>native declaration : line 81</i><br>
     *
     * @deprecated use the safer method
     * {@link #xenstat_node_num_cpus(com.sun.jna.ptr.PointerByReference)}
     * instead
     */
    @Deprecated
    int xenstat_node_num_cpus(Pointer node);

    /**
     * Find the number of CPUs existing on a node<br>
     * Original signature :
     * <code>int xenstat_node_num_cpus(xenstat_node*)</code><br>
     * <i>native declaration : line 81</i>
     */
    int xenstat_node_num_cpus(PointerByReference node);

    /**
     * Get information about the CPU speed<br>
     * Original signature :
     * <code>long long xenstat_node_cpu_hz(xenstat_node*)</code><br>
     * <i>native declaration : line 84</i><br>
     *
     * @deprecated use the safer method
     * {@link #xenstat_node_cpu_hz(com.sun.jna.ptr.PointerByReference)} instead
     */
    @Deprecated
    long xenstat_node_cpu_hz(Pointer node);

    /**
     * Get information about the CPU speed<br>
     * Original signature :
     * <code>long long xenstat_node_cpu_hz(xenstat_node*)</code><br>
     * <i>native declaration : line 84</i>
     */
    long xenstat_node_cpu_hz(PointerByReference node);

    /**
     * Get the domain ID for this domain<br>
     * Original signature :
     * <code>int xenstat_domain_id(xenstat_domain*)</code><br>
     * <i>native declaration : line 91</i><br>
     *
     * @deprecated use the safer method
     * {@link #xenstat_domain_id(com.sun.jna.ptr.PointerByReference)} instead
     */
    @Deprecated
    int xenstat_domain_id(Pointer domain);

    /**
     * Get the domain ID for this domain<br>
     * Original signature :
     * <code>int xenstat_domain_id(xenstat_domain*)</code><br>
     * <i>native declaration : line 91</i>
     */
    int xenstat_domain_id(PointerByReference domain);

    /**
     * Set the domain name for the domain<br>
     * Original signature :
     * <code>char* xenstat_domain_name(xenstat_domain*)</code><br>
     * <i>native declaration : line 94</i><br>
     *
     * @deprecated use the safer method
     * {@link #xenstat_domain_name(com.sun.jna.ptr.PointerByReference)} instead
     */
    @Deprecated
    Pointer xenstat_domain_name(Pointer domain);

    /**
     * Set the domain name for the domain<br>
     * Original signature :
     * <code>char* xenstat_domain_name(xenstat_domain*)</code><br>
     * <i>native declaration : line 94</i>
     */
    Pointer xenstat_domain_name(PointerByReference domain);

    /**
     * Get information about how much CPU time has been used<br>
     * Original signature :
     * <code>long long xenstat_domain_cpu_ns(xenstat_domain*)</code><br>
     * <i>native declaration : line 97</i><br>
     *
     * @deprecated use the safer method
     * {@link #xenstat_domain_cpu_ns(com.sun.jna.ptr.PointerByReference)}
     * instead
     */
    @Deprecated
    long xenstat_domain_cpu_ns(Pointer domain);

    /**
     * Get information about how much CPU time has been used<br>
     * Original signature :
     * <code>long long xenstat_domain_cpu_ns(xenstat_domain*)</code><br>
     * <i>native declaration : line 97</i>
     */
    long xenstat_domain_cpu_ns(PointerByReference domain);

    /**
     * Find the number of VCPUs allocated to a domain<br>
     * Original signature :
     * <code>int xenstat_domain_num_vcpus(xenstat_domain*)</code><br>
     * <i>native declaration : line 100</i><br>
     *
     * @deprecated use the safer method
     * {@link #xenstat_domain_num_vcpus(com.sun.jna.ptr.PointerByReference)}
     * instead
     */
    @Deprecated
    int xenstat_domain_num_vcpus(Pointer domain);

    /**
     * Find the number of VCPUs allocated to a domain<br>
     * Original signature :
     * <code>int xenstat_domain_num_vcpus(xenstat_domain*)</code><br>
     * <i>native declaration : line 100</i>
     */
    int xenstat_domain_num_vcpus(PointerByReference domain);

    /**
     * Get the VCPU handle to obtain VCPU stats<br>
     * Original signature :
     * <code>xenstat_vcpu* xenstat_domain_vcpu(xenstat_domain*, unsigned int)</code><br>
     * <i>native declaration : line 103</i><br>
     *
     * @deprecated use the safer method
     * {@link #xenstat_domain_vcpu(com.sun.jna.ptr.PointerByReference, int)}
     * instead
     */
    @Deprecated
    PointerByReference xenstat_domain_vcpu(Pointer domain, int vcpu);

    /**
     * Get the VCPU handle to obtain VCPU stats<br>
     * Original signature :
     * <code>xenstat_vcpu* xenstat_domain_vcpu(xenstat_domain*, unsigned int)</code><br>
     * <i>native declaration : line 103</i>
     */
    PointerByReference xenstat_domain_vcpu(PointerByReference domain, int vcpu);

    /**
     * Find the current memory reservation for this domain<br>
     * Original signature :
     * <code>long long xenstat_domain_cur_mem(xenstat_domain*)</code><br>
     * <i>native declaration : line 107</i><br>
     *
     * @deprecated use the safer method
     * {@link #xenstat_domain_cur_mem(com.sun.jna.ptr.PointerByReference)}
     * instead
     */
    @Deprecated
    long xenstat_domain_cur_mem(Pointer domain);

    /**
     * Find the current memory reservation for this domain<br>
     * Original signature :
     * <code>long long xenstat_domain_cur_mem(xenstat_domain*)</code><br>
     * <i>native declaration : line 107</i>
     */
    long xenstat_domain_cur_mem(PointerByReference domain);

    /**
     * Find the maximum memory reservation for this domain<br>
     * Original signature :
     * <code>long long xenstat_domain_max_mem(xenstat_domain*)</code><br>
     * <i>native declaration : line 110</i><br>
     *
     * @deprecated use the safer method
     * {@link #xenstat_domain_max_mem(com.sun.jna.ptr.PointerByReference)}
     * instead
     */
    @Deprecated
    long xenstat_domain_max_mem(Pointer domain);

    /**
     * Find the maximum memory reservation for this domain<br>
     * Original signature :
     * <code>long long xenstat_domain_max_mem(xenstat_domain*)</code><br>
     * <i>native declaration : line 110</i>
     */
    long xenstat_domain_max_mem(PointerByReference domain);

    /**
     * Find the domain's SSID<br>
     * Original signature :
     * <code>int xenstat_domain_ssid(xenstat_domain*)</code><br>
     * <i>native declaration : line 113</i><br>
     *
     * @deprecated use the safer method
     * {@link #xenstat_domain_ssid(com.sun.jna.ptr.PointerByReference)} instead
     */
    @Deprecated
    int xenstat_domain_ssid(Pointer domain);

    /**
     * Find the domain's SSID<br>
     * Original signature :
     * <code>int xenstat_domain_ssid(xenstat_domain*)</code><br>
     * <i>native declaration : line 113</i>
     */
    int xenstat_domain_ssid(PointerByReference domain);

    /**
     * Get domain states<br>
     * Original signature :
     * <code>int xenstat_domain_dying(xenstat_domain*)</code><br>
     * <i>native declaration : line 116</i><br>
     *
     * @deprecated use the safer method
     * {@link #xenstat_domain_dying(com.sun.jna.ptr.PointerByReference)} instead
     */
    @Deprecated
    int xenstat_domain_dying(Pointer domain);

    /**
     * Get domain states<br>
     * Original signature :
     * <code>int xenstat_domain_dying(xenstat_domain*)</code><br>
     * <i>native declaration : line 116</i>
     */
    int xenstat_domain_dying(PointerByReference domain);

    /**
     * Original signature :
     * <code>int xenstat_domain_crashed(xenstat_domain*)</code><br>
     * <i>native declaration : line 117</i><br>
     *
     * @deprecated use the safer method
     * {@link #xenstat_domain_crashed(com.sun.jna.ptr.PointerByReference)}
     * instead
     */
    @Deprecated
    int xenstat_domain_crashed(Pointer domain);

    /**
     * Original signature :
     * <code>int xenstat_domain_crashed(xenstat_domain*)</code><br>
     * <i>native declaration : line 117</i>
     */
    int xenstat_domain_crashed(PointerByReference domain);

    /**
     * Original signature :
     * <code>int xenstat_domain_shutdown(xenstat_domain*)</code><br>
     * <i>native declaration : line 118</i><br>
     *
     * @deprecated use the safer method
     * {@link #xenstat_domain_shutdown(com.sun.jna.ptr.PointerByReference)}
     * instead
     */
    @Deprecated
    int xenstat_domain_shutdown(Pointer domain);

    /**
     * Original signature :
     * <code>int xenstat_domain_shutdown(xenstat_domain*)</code><br>
     * <i>native declaration : line 118</i>
     */
    int xenstat_domain_shutdown(PointerByReference domain);

    /**
     * Original signature :
     * <code>int xenstat_domain_paused(xenstat_domain*)</code><br>
     * <i>native declaration : line 119</i><br>
     *
     * @deprecated use the safer method
     * {@link #xenstat_domain_paused(com.sun.jna.ptr.PointerByReference)}
     * instead
     */
    @Deprecated
    int xenstat_domain_paused(Pointer domain);

    /**
     * Original signature :
     * <code>int xenstat_domain_paused(xenstat_domain*)</code><br>
     * <i>native declaration : line 119</i>
     */
    int xenstat_domain_paused(PointerByReference domain);

    /**
     * Original signature :
     * <code>int xenstat_domain_blocked(xenstat_domain*)</code><br>
     * <i>native declaration : line 120</i><br>
     *
     * @deprecated use the safer method
     * {@link #xenstat_domain_blocked(com.sun.jna.ptr.PointerByReference)}
     * instead
     */
    @Deprecated
    int xenstat_domain_blocked(Pointer domain);

    /**
     * Original signature :
     * <code>int xenstat_domain_blocked(xenstat_domain*)</code><br>
     * <i>native declaration : line 120</i>
     */
    int xenstat_domain_blocked(PointerByReference domain);

    /**
     * Original signature :
     * <code>int xenstat_domain_running(xenstat_domain*)</code><br>
     * <i>native declaration : line 121</i><br>
     *
     * @deprecated use the safer method
     * {@link #xenstat_domain_running(com.sun.jna.ptr.PointerByReference)}
     * instead
     */
    @Deprecated
    int xenstat_domain_running(Pointer domain);

    /**
     * Original signature :
     * <code>int xenstat_domain_running(xenstat_domain*)</code><br>
     * <i>native declaration : line 121</i>
     */
    int xenstat_domain_running(PointerByReference domain);

    /**
     * Get the number of networks for a given domain<br>
     * Original signature :
     * <code>int xenstat_domain_num_networks(xenstat_domain*)</code><br>
     * <i>native declaration : line 124</i><br>
     *
     * @deprecated use the safer method
     * {@link #xenstat_domain_num_networks(com.sun.jna.ptr.PointerByReference)}
     * instead
     */
    @Deprecated
    int xenstat_domain_num_networks(Pointer xenstat_domainPtr1);

    /**
     * Get the number of networks for a given domain<br>
     * Original signature :
     * <code>int xenstat_domain_num_networks(xenstat_domain*)</code><br>
     * <i>native declaration : line 124</i>
     */
    int xenstat_domain_num_networks(PointerByReference xenstat_domainPtr1);

    /**
     * Get the network handle to obtain network stats<br>
     * Original signature :
     * <code>xenstat_network* xenstat_domain_network(xenstat_domain*, unsigned int)</code><br>
     * <i>native declaration : line 127</i><br>
     *
     * @deprecated use the safer method
     * {@link #xenstat_domain_network(com.sun.jna.ptr.PointerByReference, int)}
     * instead
     */
    @Deprecated
    PointerByReference xenstat_domain_network(Pointer domain, int network);

    /**
     * Get the network handle to obtain network stats<br>
     * Original signature :
     * <code>xenstat_network* xenstat_domain_network(xenstat_domain*, unsigned int)</code><br>
     * <i>native declaration : line 127</i>
     */
    PointerByReference xenstat_domain_network(PointerByReference domain, int network);

    /**
     * Get the number of VBDs for a given domain<br>
     * Original signature :
     * <code>int xenstat_domain_num_vbds(xenstat_domain*)</code><br>
     * <i>native declaration : line 131</i><br>
     *
     * @deprecated use the safer method
     * {@link #xenstat_domain_num_vbds(com.sun.jna.ptr.PointerByReference)}
     * instead
     */
    @Deprecated
    int xenstat_domain_num_vbds(Pointer xenstat_domainPtr1);

    /**
     * Get the number of VBDs for a given domain<br>
     * Original signature :
     * <code>int xenstat_domain_num_vbds(xenstat_domain*)</code><br>
     * <i>native declaration : line 131</i>
     */
    int xenstat_domain_num_vbds(PointerByReference xenstat_domainPtr1);

    /**
     * Get the VBD handle to obtain VBD stats<br>
     * Original signature :
     * <code>xenstat_vbd* xenstat_domain_vbd(xenstat_domain*, unsigned int)</code><br>
     * <i>native declaration : line 134</i><br>
     *
     * @deprecated use the safer method
     * {@link #xenstat_domain_vbd(com.sun.jna.ptr.PointerByReference, int)}
     * instead
     */
    @Deprecated
    PointerByReference xenstat_domain_vbd(Pointer domain, int vbd);

    /**
     * Get the VBD handle to obtain VBD stats<br>
     * Original signature :
     * <code>xenstat_vbd* xenstat_domain_vbd(xenstat_domain*, unsigned int)</code><br>
     * <i>native declaration : line 134</i>
     */
    PointerByReference xenstat_domain_vbd(PointerByReference domain, int vbd);

    /**
     * Get the tmem information for a given domain<br>
     * Original signature :
     * <code>xenstat_tmem* xenstat_domain_tmem(xenstat_domain*)</code><br>
     * <i>native declaration : line 138</i><br>
     *
     * @deprecated use the safer method
     * {@link #xenstat_domain_tmem(com.sun.jna.ptr.PointerByReference)} instead
     */
    @Deprecated
    PointerByReference xenstat_domain_tmem(Pointer domain);

    /**
     * Get the tmem information for a given domain<br>
     * Original signature :
     * <code>xenstat_tmem* xenstat_domain_tmem(xenstat_domain*)</code><br>
     * <i>native declaration : line 138</i>
     */
    PointerByReference xenstat_domain_tmem(PointerByReference domain);

    /**
     * Get VCPU usage<br>
     * Original signature :
     * <code>int xenstat_vcpu_online(xenstat_vcpu*)</code><br>
     * <i>native declaration : line 145</i><br>
     *
     * @deprecated use the safer method
     * {@link #xenstat_vcpu_online(com.sun.jna.ptr.PointerByReference)} instead
     */
    @Deprecated
    int xenstat_vcpu_online(Pointer vcpu);

    /**
     * Get VCPU usage<br>
     * Original signature :
     * <code>int xenstat_vcpu_online(xenstat_vcpu*)</code><br>
     * <i>native declaration : line 145</i>
     */
    int xenstat_vcpu_online(PointerByReference vcpu);

    /**
     * Original signature :
     * <code>long long xenstat_vcpu_ns(xenstat_vcpu*)</code><br>
     * <i>native declaration : line 146</i><br>
     *
     * @deprecated use the safer method
     * {@link #xenstat_vcpu_ns(com.sun.jna.ptr.PointerByReference)} instead
     */
    @Deprecated
    long xenstat_vcpu_ns(Pointer vcpu);

    /**
     * Original signature :
     * <code>long long xenstat_vcpu_ns(xenstat_vcpu*)</code><br>
     * <i>native declaration : line 146</i>
     */
    long xenstat_vcpu_ns(PointerByReference vcpu);

    /**
     * Get the ID for this network<br>
     * Original signature :
     * <code>int xenstat_network_id(xenstat_network*)</code><br>
     * <i>native declaration : line 154</i><br>
     *
     * @deprecated use the safer method
     * {@link #xenstat_network_id(com.sun.jna.ptr.PointerByReference)} instead
     */
    @Deprecated
    int xenstat_network_id(Pointer network);

    /**
     * Get the ID for this network<br>
     * Original signature :
     * <code>int xenstat_network_id(xenstat_network*)</code><br>
     * <i>native declaration : line 154</i>
     */
    int xenstat_network_id(PointerByReference network);

    /**
     * Get the number of receive bytes for this network<br>
     * Original signature :
     * <code>long long xenstat_network_rbytes(xenstat_network*)</code><br>
     * <i>native declaration : line 157</i><br>
     *
     * @deprecated use the safer method
     * {@link #xenstat_network_rbytes(com.sun.jna.ptr.PointerByReference)}
     * instead
     */
    @Deprecated
    long xenstat_network_rbytes(Pointer network);

    /**
     * Get the number of receive bytes for this network<br>
     * Original signature :
     * <code>long long xenstat_network_rbytes(xenstat_network*)</code><br>
     * <i>native declaration : line 157</i>
     */
    long xenstat_network_rbytes(PointerByReference network);

    /**
     * Get the number of receive packets for this network<br>
     * Original signature :
     * <code>long long xenstat_network_rpackets(xenstat_network*)</code><br>
     * <i>native declaration : line 160</i><br>
     *
     * @deprecated use the safer method
     * {@link #xenstat_network_rpackets(com.sun.jna.ptr.PointerByReference)}
     * instead
     */
    @Deprecated
    long xenstat_network_rpackets(Pointer network);

    /**
     * Get the number of receive packets for this network<br>
     * Original signature :
     * <code>long long xenstat_network_rpackets(xenstat_network*)</code><br>
     * <i>native declaration : line 160</i>
     */
    long xenstat_network_rpackets(PointerByReference network);

    /**
     * Get the number of receive errors for this network<br>
     * Original signature :
     * <code>long long xenstat_network_rerrs(xenstat_network*)</code><br>
     * <i>native declaration : line 163</i><br>
     *
     * @deprecated use the safer method
     * {@link #xenstat_network_rerrs(com.sun.jna.ptr.PointerByReference)}
     * instead
     */
    @Deprecated
    long xenstat_network_rerrs(Pointer network);

    /**
     * Get the number of receive errors for this network<br>
     * Original signature :
     * <code>long long xenstat_network_rerrs(xenstat_network*)</code><br>
     * <i>native declaration : line 163</i>
     */
    long xenstat_network_rerrs(PointerByReference network);

    /**
     * Get the number of receive drops for this network<br>
     * Original signature :
     * <code>long long xenstat_network_rdrop(xenstat_network*)</code><br>
     * <i>native declaration : line 166</i><br>
     *
     * @deprecated use the safer method
     * {@link #xenstat_network_rdrop(com.sun.jna.ptr.PointerByReference)}
     * instead
     */
    @Deprecated
    long xenstat_network_rdrop(Pointer network);

    /**
     * Get the number of receive drops for this network<br>
     * Original signature :
     * <code>long long xenstat_network_rdrop(xenstat_network*)</code><br>
     * <i>native declaration : line 166</i>
     */
    long xenstat_network_rdrop(PointerByReference network);

    /**
     * Get the number of transmit bytes for this network<br>
     * Original signature :
     * <code>long long xenstat_network_tbytes(xenstat_network*)</code><br>
     * <i>native declaration : line 169</i><br>
     *
     * @deprecated use the safer method
     * {@link #xenstat_network_tbytes(com.sun.jna.ptr.PointerByReference)}
     * instead
     */
    @Deprecated
    long xenstat_network_tbytes(Pointer network);

    /**
     * Get the number of transmit bytes for this network<br>
     * Original signature :
     * <code>long long xenstat_network_tbytes(xenstat_network*)</code><br>
     * <i>native declaration : line 169</i>
     */
    long xenstat_network_tbytes(PointerByReference network);

    /**
     * Get the number of transmit packets for this network<br>
     * Original signature :
     * <code>long long xenstat_network_tpackets(xenstat_network*)</code><br>
     * <i>native declaration : line 172</i><br>
     *
     * @deprecated use the safer method
     * {@link #xenstat_network_tpackets(com.sun.jna.ptr.PointerByReference)}
     * instead
     */
    @Deprecated
    long xenstat_network_tpackets(Pointer network);

    /**
     * Get the number of transmit packets for this network<br>
     * Original signature :
     * <code>long long xenstat_network_tpackets(xenstat_network*)</code><br>
     * <i>native declaration : line 172</i>
     */
    long xenstat_network_tpackets(PointerByReference network);

    /**
     * Get the number of transmit errors for this network<br>
     * Original signature :
     * <code>long long xenstat_network_terrs(xenstat_network*)</code><br>
     * <i>native declaration : line 175</i><br>
     *
     * @deprecated use the safer method
     * {@link #xenstat_network_terrs(com.sun.jna.ptr.PointerByReference)}
     * instead
     */
    @Deprecated
    long xenstat_network_terrs(Pointer network);

    /**
     * Get the number of transmit errors for this network<br>
     * Original signature :
     * <code>long long xenstat_network_terrs(xenstat_network*)</code><br>
     * <i>native declaration : line 175</i>
     */
    long xenstat_network_terrs(PointerByReference network);

    /**
     * Get the number of transmit drops for this network<br>
     * Original signature :
     * <code>long long xenstat_network_tdrop(xenstat_network*)</code><br>
     * <i>native declaration : line 178</i><br>
     *
     * @deprecated use the safer method
     * {@link #xenstat_network_tdrop(com.sun.jna.ptr.PointerByReference)}
     * instead
     */
    @Deprecated
    long xenstat_network_tdrop(Pointer network);

    /**
     * Get the number of transmit drops for this network<br>
     * Original signature :
     * <code>long long xenstat_network_tdrop(xenstat_network*)</code><br>
     * <i>native declaration : line 178</i>
     */
    long xenstat_network_tdrop(PointerByReference network);

    /**
     * Get the back driver type for Virtual Block Device<br>
     * Original signature : <code>int xenstat_vbd_type(xenstat_vbd*)</code><br>
     * <i>native declaration : line 185</i><br>
     *
     * @deprecated use the safer method
     * {@link #xenstat_vbd_type(com.sun.jna.ptr.PointerByReference)} instead
     */
    @Deprecated
    int xenstat_vbd_type(Pointer vbd);

    /**
     * Get the back driver type for Virtual Block Device<br>
     * Original signature : <code>int xenstat_vbd_type(xenstat_vbd*)</code><br>
     * <i>native declaration : line 185</i>
     */
    int xenstat_vbd_type(PointerByReference vbd);

    /**
     * Get the device number for Virtual Block Device<br>
     * Original signature : <code>int xenstat_vbd_dev(xenstat_vbd*)</code><br>
     * <i>native declaration : line 188</i><br>
     *
     * @deprecated use the safer method
     * {@link #xenstat_vbd_dev(com.sun.jna.ptr.PointerByReference)} instead
     */
    @Deprecated
    int xenstat_vbd_dev(Pointer vbd);

    /**
     * Get the device number for Virtual Block Device<br>
     * Original signature : <code>int xenstat_vbd_dev(xenstat_vbd*)</code><br>
     * <i>native declaration : line 188</i>
     */
    int xenstat_vbd_dev(PointerByReference vbd);

    /**
     * Get the number of OO/RD/WR requests for vbd<br>
     * Original signature :
     * <code>long long xenstat_vbd_oo_reqs(xenstat_vbd*)</code><br>
     * <i>native declaration : line 191</i><br>
     *
     * @deprecated use the safer method
     * {@link #xenstat_vbd_oo_reqs(com.sun.jna.ptr.PointerByReference)} instead
     */
    @Deprecated
    long xenstat_vbd_oo_reqs(Pointer vbd);

    /**
     * Get the number of OO/RD/WR requests for vbd<br>
     * Original signature :
     * <code>long long xenstat_vbd_oo_reqs(xenstat_vbd*)</code><br>
     * <i>native declaration : line 191</i>
     */
    long xenstat_vbd_oo_reqs(PointerByReference vbd);

    /**
     * Original signature :
     * <code>long long xenstat_vbd_rd_reqs(xenstat_vbd*)</code><br>
     * <i>native declaration : line 192</i><br>
     *
     * @deprecated use the safer method
     * {@link #xenstat_vbd_rd_reqs(com.sun.jna.ptr.PointerByReference)} instead
     */
    @Deprecated
    long xenstat_vbd_rd_reqs(Pointer vbd);

    /**
     * Original signature :
     * <code>long long xenstat_vbd_rd_reqs(xenstat_vbd*)</code><br>
     * <i>native declaration : line 192</i>
     */
    long xenstat_vbd_rd_reqs(PointerByReference vbd);

    /**
     * Original signature :
     * <code>long long xenstat_vbd_wr_reqs(xenstat_vbd*)</code><br>
     * <i>native declaration : line 193</i><br>
     *
     * @deprecated use the safer method
     * {@link #xenstat_vbd_wr_reqs(com.sun.jna.ptr.PointerByReference)} instead
     */
    @Deprecated
    long xenstat_vbd_wr_reqs(Pointer vbd);

    /**
     * Original signature :
     * <code>long long xenstat_vbd_wr_reqs(xenstat_vbd*)</code><br>
     * <i>native declaration : line 193</i>
     */
    long xenstat_vbd_wr_reqs(PointerByReference vbd);

    /**
     * Original signature :
     * <code>long long xenstat_vbd_rd_sects(xenstat_vbd*)</code><br>
     * <i>native declaration : line 194</i><br>
     *
     * @deprecated use the safer method
     * {@link #xenstat_vbd_rd_sects(com.sun.jna.ptr.PointerByReference)} instead
     */
    @Deprecated
    long xenstat_vbd_rd_sects(Pointer vbd);

    /**
     * Original signature :
     * <code>long long xenstat_vbd_rd_sects(xenstat_vbd*)</code><br>
     * <i>native declaration : line 194</i>
     */
    long xenstat_vbd_rd_sects(PointerByReference vbd);

    /**
     * Original signature :
     * <code>long long xenstat_vbd_wr_sects(xenstat_vbd*)</code><br>
     * <i>native declaration : line 195</i><br>
     *
     * @deprecated use the safer method
     * {@link #xenstat_vbd_wr_sects(com.sun.jna.ptr.PointerByReference)} instead
     */
    @Deprecated
    long xenstat_vbd_wr_sects(Pointer vbd);

    /**
     * Original signature :
     * <code>long long xenstat_vbd_wr_sects(xenstat_vbd*)</code><br>
     * <i>native declaration : line 195</i>
     */
    long xenstat_vbd_wr_sects(PointerByReference vbd);

    /**
     * Tmem functions - extract tmem information<br>
     * Original signature :
     * <code>long long xenstat_tmem_curr_eph_pages(xenstat_tmem*)</code><br>
     * <i>native declaration : line 200</i><br>
     *
     * @deprecated use the safer method
     * {@link #xenstat_tmem_curr_eph_pages(com.sun.jna.ptr.PointerByReference)}
     * instead
     */
    @Deprecated
    long xenstat_tmem_curr_eph_pages(Pointer tmem);

    /**
     * Tmem functions - extract tmem information<br>
     * Original signature :
     * <code>long long xenstat_tmem_curr_eph_pages(xenstat_tmem*)</code><br>
     * <i>native declaration : line 200</i>
     */
    long xenstat_tmem_curr_eph_pages(PointerByReference tmem);

    /**
     * Original signature :
     * <code>long long xenstat_tmem_succ_eph_gets(xenstat_tmem*)</code><br>
     * <i>native declaration : line 201</i><br>
     *
     * @deprecated use the safer method
     * {@link #xenstat_tmem_succ_eph_gets(com.sun.jna.ptr.PointerByReference)}
     * instead
     */
    @Deprecated
    long xenstat_tmem_succ_eph_gets(Pointer tmem);

    /**
     * Original signature :
     * <code>long long xenstat_tmem_succ_eph_gets(xenstat_tmem*)</code><br>
     * <i>native declaration : line 201</i>
     */
    long xenstat_tmem_succ_eph_gets(PointerByReference tmem);

    /**
     * Original signature :
     * <code>long long xenstat_tmem_succ_pers_puts(xenstat_tmem*)</code><br>
     * <i>native declaration : line 202</i><br>
     *
     * @deprecated use the safer method
     * {@link #xenstat_tmem_succ_pers_puts(com.sun.jna.ptr.PointerByReference)}
     * instead
     */
    @Deprecated
    long xenstat_tmem_succ_pers_puts(Pointer tmem);

    /**
     * Original signature :
     * <code>long long xenstat_tmem_succ_pers_puts(xenstat_tmem*)</code><br>
     * <i>native declaration : line 202</i>
     */
    long xenstat_tmem_succ_pers_puts(PointerByReference tmem);

    /**
     * Original signature :
     * <code>long long xenstat_tmem_succ_pers_gets(xenstat_tmem*)</code><br>
     * <i>native declaration : line 203</i><br>
     *
     * @deprecated use the safer method
     * {@link #xenstat_tmem_succ_pers_gets(com.sun.jna.ptr.PointerByReference)}
     * instead
     */
    @Deprecated
    long xenstat_tmem_succ_pers_gets(Pointer tmem);

    /**
     * Original signature :
     * <code>long long xenstat_tmem_succ_pers_gets(xenstat_tmem*)</code><br>
     * <i>native declaration : line 203</i>
     */
    long xenstat_tmem_succ_pers_gets(PointerByReference tmem);

    public static class xenstat_domain extends PointerType {

        public xenstat_domain(Pointer address) {
            super(address);
        }

        public xenstat_domain() {
            super();
        }
    };

    public static class xenstat_network extends PointerType {

        public xenstat_network(Pointer address) {
            super(address);
        }

        public xenstat_network() {
            super();
        }
    };

    public static class xenstat_vcpu extends PointerType {

        public xenstat_vcpu(Pointer address) {
            super(address);
        }

        public xenstat_vcpu() {
            super();
        }
    };

    public static class xenstat_vbd extends PointerType {

        public xenstat_vbd(Pointer address) {
            super(address);
        }

        public xenstat_vbd() {
            super();
        }
    };

    public static class xenstat_handle extends PointerType {

        public xenstat_handle(Pointer address) {
            super(address);
        }

        public xenstat_handle() {
            super();
        }
    };

    public static class xenstat_node extends PointerType {

        public xenstat_node(Pointer address) {
            super(address);
        }

        public xenstat_node() {
            super();
        }
    };

    public static class xenstat_tmem extends PointerType {

        public xenstat_tmem(Pointer address) {
            super(address);
        }

        public xenstat_tmem() {
            super();
        }
    };

    /**
     * Original signature :
     * <code>int xenstat_collect_networks(xenstat_node*)</code><br>
     * <i>native declaration : line 105</i>
     */
    int xenstat_collect_networks(org.xen.jna.xenstat.xenstat_node node);

    /**
     * Original signature :
     * <code>void xenstat_uninit_networks(xenstat_handle*)</code><br>
     * <i>native declaration : line 106</i>
     */
    void xenstat_uninit_networks(org.xen.jna.xenstat.xenstat_handle handle);

    /**
     * Original signature :
     * <code>int xenstat_collect_vbds(xenstat_node*)</code><br>
     * <i>native declaration : line 107</i>
     */
    int xenstat_collect_vbds(org.xen.jna.xenstat.xenstat_node node);

    /**
     * Original signature :
     * <code>void xenstat_uninit_vbds(xenstat_handle*)</code><br>
     * <i>native declaration : line 108</i>
     */
    void xenstat_uninit_vbds(org.xen.jna.xenstat.xenstat_handle handle);

    public static class xs_handle extends PointerType {

        public xs_handle(Pointer address) {
            super(address);
        }

        public xs_handle() {
            super();
        }
    };

    public static class xc_interface extends PointerType {

        public xc_interface(Pointer address) {
            super(address);
        }

        public xc_interface() {
            super();
        }
    };
}
